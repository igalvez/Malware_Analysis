#! c:\perl\bin\perl.exe
# GUI for procdmp

use strict;
use Win32::GUI;

my $html = "procdmp\.html";
my %procs;

my $dataMenu = new Win32::GUI::Menu(   
    "&File" => "File",
    "		> &Save As..." => "FileSave",
    "		> -" => 0,
    "   > E&xit" => "FileExit",
    "&Help" => "Help",
    "		> &SysInfo" => "HelpSysInfo",
    "   > &About" => "HelpAbout");

# Give the window an icon
my $my_icon = new Win32::GUI::Icon("hwset.ico");
my $my_class = new Win32::GUI::Class(
       -name => "My Icon",
       -icon => $my_icon);

my  $main = Win32::GUI::Window->new(
									  -name => "Main",
									  -text => "ProcDmp",
									  -class => $my_class,
										-width => 400, 
										-height => 270,
										-resize => 0,
										-menu   => $dataMenu,
										-maxsize => [400,270],
										-minsize => [400,270]); 

my $status = new GUI::StatusBar($main,
    									-text => "Running on ".Win32::NodeName,
    									-width => $main->ScaleWidth);

my $pslist = $main->AddTextfield(-name => "pslist",
     													 -top  => 10,
     													 -left => 15,
     													 -prompt => "Pslist output:   ",
     													 -text => "",
     													 -width => 200,
     													 -height => 22,
     													 -foreground => [0,0,0],
        											 -background => [255,255,255],
                               -tabstop  => 1);

my $pslistButton = $main->AddButton(-name => "pslistButton",
															-text => "PsList",
															-top  => 10,
															-left => 315,
															-width => 50,
															-height => 22);

my $handle = $main->AddTextfield(-name => "handle",
					-top => 45,
					-left => 15,
					-prompt => "Handle output:   ",
					-text => "",
     			-width => 200,
     			-height => 22,
     			-foreground => [0,0,0],
        	-background => [255,255,255],
          -tabstop  => 1);
          
my $handleButton = $main->AddButton(-name => "handleButton",
															-text => "Handle",
															-top  => 45,
															-left => 315,
															-width => 50,
															-height => 22);          

my $fport = $main->AddTextfield(-name => "fport",
					-top => 75,
					-left => 15,
					-prompt => "Fport output:    ",
					-text => "",
     			-width => 200,
     			-height => 22,
     			-foreground => [0,0,0],
        	-background => [255,255,255],
          -tabstop  => 1);

my $fportButton = $main->AddButton(-name => "fportButton",
															-text => "FPort",
															-top  => 75,
															-left => 315,
															-width => 50,
															-height => 22);          


my $listdlls = $main->AddTextfield(-name => "listdlls",
					-top => 105,
					-left => 15,
					-prompt => "Listdlls output: ",
					-text => "",
     			-width => 200,
     			-height => 22,
     			-foreground => [0,0,0],
        	-background => [255,255,255],
          -tabstop  => 1);

my $ldButton = $main->AddButton(-name => "ldButton",
															-text => "ListDLLs",
															-top  => 105,
															-left => 315,
															-width => 50,
															-height => 22);          

my $netstat = $main->AddTextfield(-name => "netstat",
					-top => 135,
					-left => 15,
					-prompt => "Netstat output:  ",
					-text => "",
     			-width => 200,
     			-height => 22,
     			-foreground => [0,0,0],
        	-background => [255,255,255],
          -tabstop  => 1);

my $nsButton = $main->AddButton(-name => "nsButton",
															-text => "Netstat",
															-top  => 135,
															-left => 315,
															-width => 50,
															-height => 22);          

my $goButton = $main->AddButton(-name => "goButton",
															-text => "GO",
															-top  => 165,
															-left => 315,
															-width => 50,
															-height => 22);  

# Show
$main->Show();

# Event Loop
Win32::GUI::Dialog();

# Actions
#------------------------------------------
#
#------------------------------------------
sub Main_Terminate {-1;}

#------------------------------------------
#
#------------------------------------------
sub Main_Minimize {
	$main->Disable;
	$main->Hide;
	1;	
}

#------------------------------------------
#
#------------------------------------------
sub FileExit_Click {return -1;}

#------------------------------------------
#
#------------------------------------------
sub FileSave_Click {
	my $ret = Win32::GUI::GetSaveFileName(
    -title  => "Save As...",
    -file   => "\0" . " " x 256,
    -filter => ["HTML (*.htm, *.html)" => "*.htm;*.html"]);

	if($ret) {
    $html = $ret;
	} else {
    if(Win32::GUI::CommDlgExtendedError()) {
       my $msg = "ERROR. CommDlgExtendedError is: ", GUI::CommDlgExtendedError(), "\n"; 
       Win32::GUI::MessageBox(0,$msg,"Error",MB_ICONERROR);	   
    } else {
#       print "You cancelled.\n";
    }
	}
}

#------------------------------------------
#
#------------------------------------------
sub HelpSysInfo_Click {
	my $msg = "System Name: ".Win32::NodeName."\n".
						"Domain     : ".Win32::DomainName."\n".
	          "User       : ".Win32::LoginName."\n";
	Win32::GUI::MessageBox(0,$msg,"System Information",MB_ICONASTERISK);	
}

#------------------------------------------
#
#------------------------------------------
sub HelpAbout_Click {
	my $msg = "ProcDmp written by H. Carvey\n\n".
						"Copyright 2002 H. Carvey";
	Win32::GUI::MessageBox(0,$msg,"About",MB_ICONASTERISK);	
}

#------------------------------------------
#
#------------------------------------------
sub pslistButton_Click {\openFile("pslist");}

#------------------------------------------
#
#------------------------------------------
sub handleButton_Click {\openFile("handle");}

#------------------------------------------
#
#------------------------------------------
sub fportButton_Click {\openFile("fport");}

#------------------------------------------
#
#------------------------------------------
sub ldButton_Click {\openFile("listdlls");}

#------------------------------------------
#
#------------------------------------------
sub nsButton_Click {\openFile("netstat");}

#------------------------------------------
#
#------------------------------------------
sub goButton_Click {
	\procDmp();	
}

#------------------------------------------
# openFile()
#------------------------------------------
sub openFile {
	my $obj = $_[0];
	my $ret = Win32::GUI::GetOpenFileName(
    -title  => "Open File...",
    -file   => "\0" . " " x 256,
    -filter => ["All files", "*.*",]);

	if($ret) {
		$main->$obj->Text("$ret") if (-f $ret);
	} else {
    if(Win32::GUI::CommDlgExtendedError()) {
    	my $msg = "ERROR. CommDlgExtendedError is: ",GUI::CommDlgExtendedError(), "\n";    
    	Win32::GUI::MessageBox(0,$msg,"Error",MB_ICONERROR);
    } else {
#      print "You cancelled.\n";
    }
	}
}

#------------------------------------------
#
#------------------------------------------
# Get list of processes/PIDs
sub procDmp {
	my $pslist = $pslist->Text();
	open(FH, $pslist) || die "Could not open $pslist: $!\n";
	while (<FH>) {
		chomp;
		my $line = $_;
		my @list = split(/\s+/,$_,9);
		next if ($list[0] =~ m/^pslist/i);
		if ($list[2] =~ m/^\d+$/) {
			my $process = substr $line,0,12;
			$process =~ s/\s+$//;
			my $pid = substr $line,11,5;
			$pid =~ s/^0//;
			$pid =~ s/\s+//;
			$procs{$pid} = $process;
		}
	}
	close(FH);
	$status->Text("Creating ".$html."...");
# Start HTML file
	open(HTML, ">$html") || die "Could not open $html: $!\n";
	print HTML "<html><head>\n";
	print HTML "<title>NT/2K Process Dump</title>\n";
	print HTML "</head>\n";
	print HTML "<body bgcolor=#cccccc>\n";
	print HTML "<center><h2>NT/2K Process Dump</h2></center><p>\n";

	foreach my $pid (sort keys %procs) {
		print HTML "<center>\n";
		print HTML "<table border=2 cols=4 cellspacing=0 cellpadding=5 width=\"80%\">\n";
	
		my $cmd = getCommandLine($pid);
		my $context = getContext($procs{$pid},$pid);
		my @files = getFiles($procs{$pid},$pid);
		my @ports = getPorts($pid);
#	print "PID: $pid\tProcess: $procs{$pid}\n";
		print HTML "<tr><td width=\"15%\" bgcolor=\"#66ffff\"><b>PID</b></td>";
		print HTML "<td colspan=3> $pid</td></tr>\n";
		print HTML "<tr><td width=\"15%\" bgcolor=\"#66ffff\"><b>Process</b></td>";
		print HTML "<td colspan=3>$procs{$pid}</td></tr>\n";
#	print "CommandLine: $cmd\n";
		print HTML "<tr><td width=\"15%\" bgcolor=\"#66ffff\"><b>Command Line</b></td>";
		print HTML "<td colspan=3 ";
		print HTML "bgcolor=\"#ff0000\"" if isADS($procs{$pid},$cmd);
		print HTML ">$cmd</td></tr>\n";
#	print "Context    : $context\n";
		print HTML "<tr><td width=\"15%\" bgcolor=\"#66ffff\"><b>Context</b></td>";
		print HTML "<td colspan=3> $context</td></tr>\n";
# Get open files
		if (@files) {
			print HTML "<tr><td width=\"15%\" bgcolor=\"#66ffff\"><b>Open Filehandles</b></td>";	
			print HTML "<td colspan=3>\n";
			foreach my $file (@files) {
				print HTML $file."<br>\n";
			}
			print HTML "</td></tr>\n";
		}
		
# Get ports		
		if (@ports) {
			my $rows = scalar @ports;
			print HTML "<tr><td width=\"15%\" bgcolor=\"#66ffff\" rowspan=".$rows."><b>Ports</b></td>\n";
			my ($proto,$port) = split(/:/,$ports[0],2);
			my $str = getConnections($proto,$port);
			print HTML "<td>$proto</td><td>$port</td><td>$str</td></tr>\n";
		
			foreach my $index (1..$rows-1) {
				my($proto,$port) = split(/:/,$ports[$index],2);
				my $str = getConnections($proto,$port);
				print HTML "<tr><td>$proto</td><td>$port</td><td>$str</td></tr>\n";
			}
		}
		print HTML "</table><p><p>\n";
		print HTML "</center>\n";
	}

	print HTML "</html>\n";
	close(HTML);
	$status->Text("Done creating ".$html);
}
#-----------------------------------------------------------------
#
#-----------------------------------------------------------------
sub getCommandLine {
	my $pid = $_[0];	
	my $cmdline;
	my @list;
	my $listdlls = $listdlls->Text();
	open(FH, $listdlls) || die "Could not open $listdlls: $!\n";
	@list = <FH>;
	close(FH);
	
	my $count = scalar @list;
	foreach my $index (0..$count-1) {
		my $test = (split(/:/,$list[$index],2))[1];
		if ($test == $pid) {
			$cmdline = (split(/:/,$list[$index+1],2))[1];
			$cmdline =~ s/\"//g;
			chop($cmdline);
		}
	}
	return $cmdline;
}

#-----------------------------------------------------------------
#
#-----------------------------------------------------------------
sub getContext {
	my $proc = $_[0];
	my $pid = $_[1];
	my $test = "pid: $pid";
	my $context;
	my $handle = $handle->Text();
	open(FH,$handle) || die "Could not open $handle: $!\n";
	my @list = <FH>;
	close(FH); 
	my $count = scalar @list;
	foreach my $index (0..$count-1) {
		next if ($list[$index] =~ m/^(-|\s)/);
		if ($list[$index] =~ m/^$proc/i && grep(/$test/,$list[$index])) {
			$context = (split(/$pid/,$list[$index],2))[1];
			chop($context);
		}	
	}
	return $context;
}

#-----------------------------------------------------------------
#
#-----------------------------------------------------------------
sub getPorts {
	my $pid = $_[0];
	my @ports;
	my $fport = $fport->Text();
	open(FH,$fport) || die "Could not open $fport: $!\n";
	while(<FH>) {
		chomp;
		if ($_ =~ m/^$pid/) {
			my ($port,$proto) = (split(/\s+/,$_,6))[3,4];
			push(@ports,"$proto:$port");
		}
	}
	close(FH);
	return @ports;
}

#-----------------------------------------------------------------
#
#-----------------------------------------------------------------
sub getFiles {
	my $proc = $_[0];
	my $pid = $_[1];
	my $test = "pid: $pid";
	my @files;
	my $tag;
	
	my $handle = $handle->Text();
	open(FH,$handle) || die "Could not open $handle: $!\n";
	my @list = <FH>;
	close(FH); 
	my $count = scalar @list;
	foreach my $index (0..$count-1) {
# Find the line that contains the process name and PID		
		$tag = ++$index if ($list[$index] =~ m/^$proc/i && grep(/$test/,$list[$index]));
	}
	
	while ($list[$tag] =~ m/^\s+/) {
  	if (grep(/file/i,$list[$tag])) {
  		my $line = (split(/:/,$list[$tag],2))[1];
  		$line =~ s/^\s+//;
  		my $f = (split(/\s+/,$line,2))[1];
  		chomp($f);
  		push(@files,$f);
  	}	
		++$tag;
	}
	return @files;
}

#-----------------------------------------------------------------
#
#-----------------------------------------------------------------
sub getConnections {
	my $proto = $_[0];
	my $port = $_[1];
	my @conns;
	my $netstat = $netstat->Text();
	open(FH,$netstat) || die "Could not open $netstat: $!\n";
	while(<FH>) {
		chomp;
		my $line = $_;
		if ($line =~ m/^\s+$proto/i) {
			my ($local,$remote,$status) = (split(/\s+/,$line,5))[2,3,4];
			my $lport = (split(/:/,$local,2))[1];
			push(@conns,$remote.":$status") if ($lport == $port);
		}
	}
	close(FH);
#	my $str = join(',',@conns);
	my $str = join('<br>',@conns);
}

#-----------------------------------------------------------------
#
#-----------------------------------------------------------------
sub isADS {
	return 0 if ($_[0] =~ m/^csrss$/i);
	my @list = split(/\\/,$_[1]);
	my $count = scalar @list;
	if ($count > 0) {
		(grep(/:/,$list[$count-1])) ? (return 1) : (return 0);
	}
	else {
		(grep(/:/,$_[1])) ? (return 1) : (return 0);
	} 
}

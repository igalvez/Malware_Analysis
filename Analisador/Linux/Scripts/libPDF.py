from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.pdfgen import canvas
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.rl_config import defaultPageSize
from reportlab.lib.units import inch
from reportlab.lib.styles import ParagraphStyle
PAGE_HEIGHT=defaultPageSize[1]; PAGE_WIDTH=defaultPageSize[0]
styles = getSampleStyleSheet()

PASTA = '~/Analisador/Relatorios/'


class LibPDF:

	def __init__(self, narquivo,caminho,fonts, sizes):
		#self.c = canvas.Canvas(narquivo)
		arq = narquivo.strip('\n')
		arq.strip('\r')
		self.doc = SimpleDocTemplate(caminho)
		self.Story = [Spacer(1,2.0*inch)]
	 	self.style = styles['Normal']
		self.indice = 2
		self.fonts = fonts
		self.sizes = sizes
		self.color = 'black'
		self.title = arq
		#j, self.height = A4
		#Title = 'Platypus Test'


	def setFirstPage(self,canvas,doc):
		canvas.saveState()
		canvas.setFont('Times-Bold', 25)
		canvas.drawCentredString(PAGE_WIDTH/2.0, PAGE_HEIGHT - 100, 'Relatorio')
		canvas.setFont('Times-Bold', 22)
		canvas.drawCentredString(PAGE_WIDTH/2.0, PAGE_HEIGHT - 130, self.title)
		canvas.setFont('Times-Roman',9)
		canvas.drawString(inch, 0.75*inch, '1')
		#canvas.setFont(self.fonts[0],self.sizes[0])
		canvas.restoreState()

	def setLaterPages(self,canvas, doc):
		canvas.saveState()
		canvas.setFont('Times-Roman', 9)
		canvas.drawString(inch, 0.75*inch, str(doc.page))
		canvas.restoreState()


	def pdfText(self, texto, indice):
		#canvas.setFont(fonts[indice], sizes[indice])
		print 'pdfTEEEEEXT'
		print texto + '\n'
		if(indice == 1):
			texto1 = '<strong>' + texto + '</strong>'
			self.Story.append(Spacer(1,0.2*inch))
		else:
			if (self.indice == 1):
				self.Story.append(Spacer(1,0.1*inch))
			texto1 = texto
		#texto1 = '<font face=\"' + fonts[indice] +'\" size=\"' + sizes[indice] + '\">' + texto1 + '</font>'
		p = Paragraph(texto1,self.style)
		self.Story.append(p)
	
		self.indice = indice

	def pdfTextList(self,lista):
		#canvas.setFont(fonts[0], sizes[0])
		texto = ''
		for i in lista:
			texto = texto + i + '<br/>'
		self.pdfText(texto, 0)
			
			
	def makeDocument(self):
		self.doc.build(self.Story, onFirstPage=self.setFirstPage, onLaterPages=self.setLaterPages)
		
	def inicializa(self):
		doc = SimpleDocTemplate('teste123.pdf')
		Story = [Spacer(1,0.2*inch)]
		style = styles['Normal']



def main():
	fonts = ['Arial', 'Helvetica', 'Times-Roman', 'blabsblabs','sdjakdjoiajdioajdiojakldajkjdliakjsdlkajdiajljsdaojsdoa']
	sizes = ['10' , '20', '30']
	report = LibPDF('etc','teste.pdf',fonts,sizes)
	report.pdfText('TESTANDO <br/> lalalalallalalal', 1)
	report.pdfText('OIEE<strong>OEOEOE</strong>', 2)
	report.pdfTextList(fonts)
	report.makeDocument()

	#def main():
	#	doc = SimpleDocTemplate('teste123.pdf')
	#	Story = [Spacer(1,2*inch)]
	#	style = styles['Normal']
	#	for i in range(20):
	#		texto = ('Esse eh o paragrafo numero %s' %i) *20
	#		p = Paragraph(texto, style)
	#		Story.append(p)
	#		Story.append(Spacer(1,0.2*inch))
	#doc.build(Story, onFirstPage=setFirstPage, onLaterPages=setLaterPages)


if __name__ == "__main__":
	main()
